# name: 'backend_rds/*'
on: workflow_dispatch 
  # push:
  #   paths:
  #     - 'backend_rds/*'
env:
      IMAGE_NAME: ${{ vars.IMAGE_NAME_RDS }}

# jobs:
#   ci:
#     name: CI
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#         with:
#           ref: 'workflows'
#           fetch-depth: 0

#       - name: Set up AWS CLI
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Log in to Amazon ECR
#         run: |
#           aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      
#       # Step 4: Get short Git commit hash and the commit tag
#       - name: Get commit tag and short hash
#         id: vars
#         run: |
#           echo "COMMIT_TAG=$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      
#       - name: Build Docker Image
#         run: |
#           docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$IMAGE_NAME:${{ env.COMMIT_TAG }} ./$IMAGE_NAME

#       - name: Push Docker Image to ECR
#         run: |
#           docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$IMAGE_NAME:${{ env.COMMIT_TAG }}
          

  cd:
    name: CD
    # needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'workflows'
          fetch-depth: 0

      # - name: Set up AWS CLI
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}

      # - name: Log in to Amazon ECR
      #   run: |
      #     aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      
      # Step 4: Get short Git commit hash and the commit tag
      - name: Get commit tag and short hash
        id: vars
        run: |
          echo "COMMIT_TAG=$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      
      # - uses: mikefarah/yq@master
      #   with:
      #     cmd: yq e '.services.backend_rds.image = "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ vars.IMAGE_NAME_RDS }}:${{ env.COMMIT_TAG }}"' -i docker-compose.yml
      - uses: mikefarah/yq@master
        with:
          cmd: |
            yq e '.services.backend_rds |= {"image": "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_NAME }}:${{ env.COMMIT_TAG }}"} + .' -i docker-compose-rds-prod.yml

      
      
      - name: Copy file from runner to remote VM
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ vars.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          source: "./docker-compose-rds-prod.yml"
          target: "~/"

      - name: Copy file from runner to remote VM
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ vars.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          source: "./.env"
          target: "~/"

      # - name: ls -a via ssh
      #   uses: fifsky/ssh-action@master
      #   with:
      #     command: |
      #       cd ~
      #       ll
            
      #       aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      #       sudo docker compose -f docker-compose-rds-prod.yml  up -d
      #     host: ${{ secrets.AWS_HOST }}
      #     user: ${{ secrets.AWS_ACCOUNT }}
      #     key: ${{ secrets.AWS_SSH_PRIVATE_KEY}}


      - name: Add host key to known_hosts
        run: mkdir -p ~/.ssh && ssh-keyscan ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts
      
      - name: Set up SSH
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ vars.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # # Automatically accept host key
            # mkdir -p ~/.ssh
            # ssh-keyscan -H ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts
            
            sudo apt-get install -y awscli

            whoami
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws configure set region ${{ secrets.AWS_REGION }}            


            cd ~
            ls -la
            

            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

            docker compose -f docker-compose-rds-prod.yml  up -d
            # Check if docker-compose up was successful
            if [ $(docker compose ps -q backend_rds) ]; then
              echo "Docker containers are up and running."
            else
              echo "Docker-compose failed. Exiting."
              exit 1
            fi
  
      # - name: Push code to repository if docker-compose up is successful
      #   if: ${{ success() }}
      #   run: |
      #     git config --global user.name "GitHub Actions"
      #     git config --global user.email "actions@github.com"
      #     git commit -am "Update docker-compose.yml ${{ env.COMMIT_TAG }}"
      #     git push 

          
      
    

          
